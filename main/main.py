#!/usr/bin/python

import telebot
import config, dbcon, tg_keyboard, messages

API_TOKEN = config.API_KEY

bot = telebot.TeleBot(API_TOKEN)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    if dbcon.check_user_indb(message):
        print("user find")
        bot.send_message(message.from_user.id, "–≠—Ç–æ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ VPN —Å–µ—Ä–≤–∏—Å–∞ VPN.by_Prokin. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å /auth")
        dbcon.set_status(message, 10)
    else:
        print("user not find")
        bot.send_message(message.from_user.id, "–≠—Ç–æ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ VPN —Å–µ—Ä–≤–∏—Å–∞ VPN.by_Prokin. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å /auth")
        dbcon.add_new_user(message)

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.from_user.id, messages.help_message)
    


@bot.message_handler(commands=['admin'])
def send_message(message):
    if message.from_user.id != 758952233:
        bot.send_message(message.from_user.id, "–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ")
    elif message.from_user.id == 758952233:
        bot.send_message(message.from_user.id, "–í—ã–ø–æ–ª–Ω–µ–Ω –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=tg_keyboard.admin_keyboard())
        dbcon.set_status(message, 99)
    else:
        bot.send_message((message.from_user.id, "–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞"))

@bot.message_handler(commands=['auth'])
def send_auth(message):
    dbcon.set_status(message, 10)
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –í–∞—à —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    dbcon.set_status(message, 11) # —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞

# –°—Ç–∞—Ç—É—Å—ã
# 10 - —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç
# 11 - —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
# 20 - —Å—Ç–∞—Ç—É—Å –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
# 30 - –æ–∫–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¢–ü
# 40 - —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
# 50 - –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞–º–∏
# 99 - –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
# 
#
#
#
    

@bot.message_handler(func=lambda message: True)
def status(message):
    user_status = dbcon.get_status(message)
    print(user_status, message.text)
    if user_status == 11:
        telegram_id = dbcon.check_token(message)
        if telegram_id != "":
            dbcon.user_reg(message)
            user_name = dbcon.user_name(message)
            bot.send_message(message.from_user.id, f"–¢–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {user_name}",reply_markup=tg_keyboard.main_keyboard())
            dbcon.set_status(message, 20)

        else:
            bot.send_message(message.from_user.id, """–¢–æ–∫–µ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. 
                                                    –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É""")

    elif user_status == 20:
        if message.text == "–ë–∞–ª–∞–Ω—Å":
            dbcon.calc_balances()
            balanse = dbcon.get_user_balance(message)
            bot.send_message(message.from_user.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å {balanse} —Ä—É–±.",reply_markup=tg_keyboard.main_keyboard())

        elif message.text == "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É":
            dbcon.set_status(message, 30)
            bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
        elif message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å":
            bot.send_message(message.from_user.id, "–°–ë–ü `+79635122453` –¢–∏–Ω—å–∫–æ—Ñ—ÑüôÇ", parse_mode="MARKDOWN")
        
        elif message.text == "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏":
            dbcon.set_status(message, 40)
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π:", reply_markup=tg_keyboard.num_keyboard())
        
        elif message.text == "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –¥–ª—è VPN":
            dbcon.set_status(message, 50)
            bot.send_message(message.from_user.id, "–ü—Ä–æ–≤–µ—Ä—è–µ–º –í–∞—à–∏ –∫–ª—é—á–∏...")
            keys = dbcon.get_user_vpn_keys(message)
            if keys == None:
                dbcon.set_status(message, 51)
                bot.send_message(message.from_user.id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–ª—é—á–µ–π –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ.\n–ñ–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å?",reply_markup=tg_keyboard.yes_or_no_keyboard())
            elif keys != None:
                user_keys = str()
                for key in keys:
                    user_keys = user_keys + f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {key[1]} —Ä—É–±.\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: `{key[2]}`\n-----------\n"
                
                dbcon.set_status(message, 20)
                bot.send_message(message.from_user.id, user_keys, parse_mode="MARKDOWN",reply_markup=tg_keyboard.main_keyboard())
                bot.send_message(message.from_user.id, "–ò–Ω—Å—Ç—Ä—É–∫–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é - /help")

            

    elif user_status == 30:
        task_id = dbcon.create_support_task(message)
        dbcon.set_status(message, 20)
        bot.send_message(message.from_user.id, f"–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ ‚Ññ {task_id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ.",reply_markup=tg_keyboard.main_keyboard())

    elif user_status == 40:
        operations_list = dbcon.get_operations_user(message, message.text)
        operations = str()
        for operation in operations_list:
            operations = operations + f"-----------\nID –æ–ø–µ—Ä–∞—Ü–∏–∏: {operation[0]}\n–°—É–º–º–∞: {operation[1]} —Ä—É–±.\n–î–∞—Ç–∞: {operation[2]}\n–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: {operation[3]}\n"
        bot.send_message(message.from_user.id, operations, parse_mode='html', reply_markup=tg_keyboard.main_keyboard())
        dbcon.set_status(message, 20)

    elif user_status == 51:
        if message.text == "–î–∞":
            bot.send_message(message.from_user.id, "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞...")
            dbcon.create_new_key(message)
            keys = dbcon.get_user_vpn_keys(message)
            user_keys = str()
            for key in keys:
                user_keys = user_keys + f"-----------\n–ö–ª—é—á: {key[0]}\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {key[1]} —Ä—É–±.\n–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {key[2]}"
                
            dbcon.set_status(message, 20)
            bot.send_message(message.from_user.id, user_keys,reply_markup=tg_keyboard.main_keyboard())
            bot.send_message(message.from_user.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª—é—á–∞ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ /help",reply_markup=tg_keyboard.main_keyboard())

    elif user_status == 99:
        if message.text == "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
            users_list = dbcon.get_list_users()
            users = str()
            for user in users_list:
                users = users + f"{user[3]}, {user[0]},  –±–∞–ª–∞–Ω—Å {user[2]} —Ä—É–±. \n–¢–æ–∫–µ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ `{user[4]}`\n---------\n"
            bot.send_message(message.from_user.id, users, parse_mode="MARKDOWN")
        
        elif message.text == "–í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω–∫–∏":
            dbcon.set_status(message, 20)
            bot.send_message(message.from_user.id, f"–í—ã—Ö–æ–¥...",reply_markup=tg_keyboard.main_keyboard())
        
        elif message.text == "–°–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            dbcon.set_status(message, 98)
            bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞")

        elif message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            dbcon.set_status(message, 97)
            bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å—É–º–º—É –≤ –≤–∏–¥–µ: 24 500")

        else:
            bot.send_message(message.from_user.id, f"–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª",reply_markup=tg_keyboard.admin_keyboard())

    elif user_status == 98:
        dbcon.set_status(message, 99)
        token = dbcon.create_user_token(message)
        bot.send_message(message.from_user.id, "–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
        bot.send_message(message.from_user.id, token)

    elif user_status == 97:
        dbcon.set_status(message, 96)
        data = message.text.split()
        id = data[0]
        summ = data[1]
        bot.send_message(message.from_user.id, f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å ID {id} –Ω–∞ —Å—É–º–º—É {summ} —Ä—É–±. –í–µ—Ä–Ω–æ?",reply_markup=tg_keyboard.yes_or_no_keyboard())
        dbcon.insert_in_db(f"insert into operation_buffer values ({id}, {summ})")

    elif user_status == 96:
        if message.text == "–î–∞":
            dbcon.add_money_to_user_from_buffer(message)
            dbcon.insert_in_db("delete from operation_buffer")
            bot.send_message(message.from_user.id, f"–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω",reply_markup=tg_keyboard.admin_keyboard())
            dbcon.calc_balances()
            dbcon.set_status(message, 99)

        elif message.text == "–ù–µ—Ç":
            dbcon.insert_in_db("delete from operation_buffer")
            dbcon.set_status(message, 97)
            bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å—É–º–º—É –≤ –≤–∏–¥–µ: 24 500")

        elif message.text == "–û—Ç–º–µ–Ω–∞":
            dbcon.insert_in_db("delete from operation_buffer")
            dbcon.set_status(message, 99)
            bot.send_message(message.from_user.id, "–û—Ç–º–µ–Ω–∞",reply_markup=tg_keyboard.admin_keyboard())

        else:
            dbcon.insert_in_db("delete from operation_buffer")
            dbcon.set_status(message, 99)
            bot.send_message(message.from_user.id, "–ù–µ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç",reply_markup=tg_keyboard.admin_keyboard())

    else:
        bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª –í–∞—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help\n–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",reply_markup=tg_keyboard.main_keyboard())
        dbcon.set_status(message, 20)


# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª –í–∞—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help",reply_markup=tg_keyboard.main_keyboard())
    dbcon.set_status(message, 20)

bot.infinity_polling()