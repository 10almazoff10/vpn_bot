#!/usr/bin/python

import telebot
from threading import Thread
from app.text import tg_keyboard, messages
from app.commands import dbcon
from app.logs import logger
from app import config
from backend import background

# Run Backend
backend = Thread(target=background.run_backend)
backend.start()

API_TOKEN = config.API_KEY

bot = telebot.TeleBot(API_TOKEN)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    logger.logger(f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, id - {message.from_user.id}")
    if dbcon.check_user_indb(message):
        print("user find")
        bot.send_message(message.from_user.id, "–≠—Ç–æ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ VPN —Å–µ—Ä–≤–∏—Å–∞ VPN_by_Prokin.",
                         reply_markup=tg_keyboard.main_keyboard())
        dbcon.set_status(message, 20)
    else:
        print("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!")
        bot.send_message(message.from_user.id, "–≠—Ç–æ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ VPN —Å–µ—Ä–≤–∏—Å–∞ VPN_by_Prokin.",
                         reply_markup=tg_keyboard.main_keyboard())
        dbcon.add_new_user(message)
        dbcon.set_status(message, 20)


@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.from_user.id, messages.help_message, parse_mode="MARKDOWN")


@bot.message_handler(commands=['admin'])
def send_message(message):
    if message.from_user.id != 758952233:
        bot.send_message(message.from_user.id, "–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ")
    elif message.from_user.id == 758952233:
        bot.send_message(message.from_user.id, "–í—ã–ø–æ–ª–Ω–µ–Ω –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                         reply_markup=tg_keyboard.admin_keyboard())
        dbcon.set_status(message, 99)
    else:
        bot.send_message(message.from_user.id, "–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")


#@bot.message_handler(commands=['auth_'])
#def send_auth(message):
#    dbcon.set_status(message, 10)
#    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –í–∞—à —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
#   dbcon.set_status(message, 11) # —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞

# –°—Ç–∞—Ç—É—Å—ã
# 10 - —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç
# 11 - —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
# 20 - —Å—Ç–∞—Ç—É—Å –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
# 30 - –æ–∫–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¢–ü
# 40 - —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
# 50 - –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞–º–∏
# 99 - –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
# 
#
#
#


@bot.message_handler(func=lambda message: True)
def status(message):
    logger.logger(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞–ø–∏—Å–∞–ª - {message.text}")
    user_status = dbcon.get_status(message)
    print(message.from_user.id, user_status, message.text)

    if user_status == 20:

        if message.text == "–ë–∞–ª–∞–Ω—Å":
            dbcon.calc_balances()
            balance = dbcon.get_user_balance(message)
            bot.send_message(message.from_user.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å {balance} —Ä—É–±.",
                             reply_markup=tg_keyboard.main_keyboard())

        elif message.text == "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É":
            dbcon.set_status(message, 30)
            bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

        elif message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å":
            bot.send_message(message.from_user.id, "–°–ë–ü `+79635122453` –¢–∏–Ω—å–∫–æ—Ñ—ÑüôÇ", parse_mode="MARKDOWN")

        elif message.text == "–¢—Ä–∞—Ñ–∏–∫":
            traffic = dbcon.get_user_traffic(message)
            bot.send_message(message.from_user.id, f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ {traffic}", parse_mode="MARKDOWN")

        elif message.text == "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏":
            dbcon.set_status(message, 40)
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π:",
                             reply_markup=tg_keyboard.num_keyboard())

        elif message.text == "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å":
            dbcon.set_status(message, 60)
            bot.send_message(message.from_user.id, "–ü–µ—Ä–µ—Ö–æ–¥...", reply_markup=tg_keyboard.make_money())

        elif message.text == "–ö–ª—é—á VPN":

            if dbcon.get_user_balance(message) > -5:

                dbcon.set_status(message, 50)
                bot.send_message(message.from_user.id, "–ü—Ä–æ–≤–µ—Ä—è–µ–º –í–∞—à–∏ –∫–ª—é—á–∏...")
                keys = dbcon.get_user_vpn_keys(message)
                print(keys)
                if keys == []:
                    dbcon.set_status(message, 51)
                    bot.send_message(message.from_user.id,
                                     "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–ª—é—á–µ–π –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ.\n–ñ–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å?",
                                     reply_markup=tg_keyboard.yes_or_no_keyboard())
                elif keys != []:
                    user_keys = str()
                    for key in keys:
                        user_keys = user_keys + f"–ö–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n`{key[0]}`\n-----------\n"

                    dbcon.set_status(message, 20)
                    bot.send_message(message.from_user.id, user_keys, parse_mode="MARKDOWN",
                                     reply_markup=tg_keyboard.main_keyboard())
                    bot.send_message(message.from_user.id, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é - /help")
            else:
                bot.send_message(message.from_user.id,
                                 "–í–∞—à –±–∞–ª–∞–Ω—Å –º–µ–Ω–µ–µ -5 —Ä—É–±–ª–µ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞",
                                 parse_mode="MARKDOWN", reply_markup=tg_keyboard.main_keyboard())

        else:
            bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª –í–∞—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help\n–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",
                             reply_markup=tg_keyboard.main_keyboard())

    elif user_status == 30:
        task_id = dbcon.create_support_task(message)
        bot.send_message(758952233, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message.text}")
        dbcon.set_status(message, 20)
        bot.send_message(message.from_user.id, f"–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ ‚Ññ {task_id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ.",
                         reply_markup=tg_keyboard.main_keyboard())

    elif user_status == 40:
        operations_list = dbcon.get_operations_user(message, message.text)
        operations = str()
        for operation in operations_list:
            operations = operations + f"-----------\nID –æ–ø–µ—Ä–∞—Ü–∏–∏: {operation[0]}\n–°—É–º–º–∞: {operation[1]} —Ä—É–±.\n–î–∞—Ç–∞: {operation[2]}\n–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: {operation[3]}\n"
        bot.send_message(message.from_user.id, operations, parse_mode='html', reply_markup=tg_keyboard.main_keyboard())
        dbcon.set_status(message, 20)

    elif user_status == 51:
        if message.text == "–î–∞":
            bot.send_message(message.from_user.id, "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞...")
            dbcon.create_new_key(message)
            keys = dbcon.get_user_vpn_keys(message)
            user_keys = str()
            for key in keys:
                user_keys = user_keys + f"-----------\n–ö–ª—é—á:\n`{key[0]}`"

            dbcon.set_status(message, 20)
            bot.send_message(message.from_user.id, user_keys, parse_mode="MARKDOWN",
                             reply_markup=tg_keyboard.main_keyboard())
            bot.send_message(message.from_user.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª—é—á–∞ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ /help",
                             reply_markup=tg_keyboard.main_keyboard())

        elif message.text == "–ù–µ—Ç":
            bot.send_message(message.from_user.id, "–û—Ç–º–µ–Ω–∞...", reply_markup=tg_keyboard.main_keyboard())
            dbcon.set_status(message, 20)

    elif user_status == 60:
        if message.text == "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥":
            bot.send_message(message.from_user.id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=tg_keyboard.make_money())

        elif message.text == "–ó–∞–¥–∞–Ω–∏—è":
            bot.send_message(message.from_user.id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=tg_keyboard.make_money())

        elif message.text == "–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã":
            keyboard = telebot.types.InlineKeyboardMarkup()
            url_button = telebot.types.InlineKeyboardButton(text="–ö—Ä—É—Ç–∏—Ç—å –∫–æ–ª–µ—Å–æ", url="http://185.246.118.85")
            keyboard.add(url_button)
            bot.send_message(message.chat.id, "–ö—Ä—É—Ç–∏—Ç—å –∫–æ–ª–µ—Å–æ!", reply_markup=keyboard)

            bot.send_message(message.from_user.id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=tg_keyboard.make_money())

        elif message.text == "–ü–æ—Å—Ç –≤ —Å–æ—Ü.—Å–µ—Ç–∏":
            bot.send_message(message.from_user.id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=tg_keyboard.make_money())

        elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è":
            bot.send_message(message.from_user.id, "–ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=tg_keyboard.main_keyboard())
            dbcon.set_status(message, 20)

        else:
            dbcon.set_status(message, 20)
            bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª –í–∞—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help\n–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",
                             reply_markup=tg_keyboard.main_keyboard())



    elif user_status == 99:
        if message.text == "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
            users_list = dbcon.get_list_users()
            users = str()
            for user in users_list:
                users = users + f"{user[3]}, {user[0]}, {user[1]}, –±–∞–ª–∞–Ω—Å: {user[2]} —Ä—É–±.\n---------\n"
            bot.send_message(message.from_user.id, users, parse_mode="MARKDOWN")

        elif message.text == "–í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω–∫–∏":
            dbcon.set_status(message, 20)
            bot.send_message(message.from_user.id, f"–í—ã—Ö–æ–¥...", reply_markup=tg_keyboard.main_keyboard())

        elif message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            dbcon.set_status(message, 97)
            bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å—É–º–º—É –≤ –≤–∏–¥–µ: 24 500")

        elif message.text == "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ VPN":
            dbcon.set_status(message, 100)
            bot.send_message(message.from_user.id, "–ü–µ—Ä–µ—Ö–æ–¥ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏",
                             reply_markup=tg_keyboard.admin_keyboard_keys())

        elif message.text == "–õ–æ–≥–∏":
            bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤–ª—è—é –ª–æ–≥–∏...")
            file = logger.get_file_log()
            bot.send_document(message.from_user.id, file)

        elif message.text == "–í—ã—Ä—É—á–∫–∞":
            money_all = dbcon.execute_query("select sum(summ) from operations where type = 2")[0]
            money_last_mounth = dbcon.execute_query(
                "select sum(summ) from operations where type = 2 and operation_date > (SELECT (NOW() - interval '1 months'))")[
                0]
            bot.send_message(message.from_user.id,
                             f"–í—ã—Ä—É—á–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: {money_last_mounth} —Ä—É–±.\n–í—ã—Ä—É—á–∫–∞ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {money_all} —Ä—É–±.")

        elif message.text == "–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é":
            dbcon.set_status(message, 95)
            bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –∏ c–æ–æ–±—â–µ–Ω–∏–µ")


        else:
            bot.send_message(message.from_user.id, f"–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª", reply_markup=tg_keyboard.admin_keyboard())

    elif user_status == 97:
        dbcon.set_status(message, 96)
        data = message.text.split()
        id = data[0]
        summ = data[1]
        bot.send_message(message.from_user.id, f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å ID {id} –Ω–∞ —Å—É–º–º—É {summ} —Ä—É–±. –í–µ—Ä–Ω–æ?",
                         reply_markup=tg_keyboard.yes_or_no_keyboard())
        dbcon.insert_in_db(f"insert into operation_buffer values ({id}, {summ})")

    elif user_status == 96:
        if message.text == "–î–∞":
            dbcon.add_money_to_user_from_buffer(message)
            dbcon.insert_in_db("delete from operation_buffer")
            bot.send_message(message.from_user.id, f"–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω",
                             reply_markup=tg_keyboard.admin_keyboard())
            dbcon.calc_balances()
            creds = dbcon.execute_query("select * from operation_buffer")

            try:
                telegram_id = dbcon.get_user_telegram_id(creds[0])[0]
                bot.send_message(telegram_id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {creds[1][0]} —Ä—É–±.\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ!")
                bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
                                 reply_markup=tg_keyboard.admin_keyboard())
                dbcon.set_status(message, 99)
            except Exception as error:
                bot.send_message(message.from_user.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n`{error}`",
                                 reply_markup=tg_keyboard.admin_keyboard())
                dbcon.set_status(message, 99)
            dbcon.set_status(message, 99)

        elif message.text == "–ù–µ—Ç":
            dbcon.insert_in_db("delete from operation_buffer")
            dbcon.set_status(message, 99)
            bot.send_message(message.from_user.id, "–û—Ç–º–µ–Ω–∞", reply_markup=tg_keyboard.admin_keyboard())

        else:
            dbcon.insert_in_db("delete from operation_buffer")
            dbcon.set_status(message, 99)
            bot.send_message(message.from_user.id, "–ù–µ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç", reply_markup=tg_keyboard.admin_keyboard())

    elif user_status == 95:
        id = message.text.split(" ")[0]
        text_message = message.text.split(" ", 1)[1:][0]
        try:
            telegram_id = dbcon.get_user_telegram_id(id)[0]
            bot.send_message(telegram_id, f"{text_message}")
            bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
                             reply_markup=tg_keyboard.admin_keyboard())
            dbcon.set_status(message, 99)
        except Exception as error:
            bot.send_message(message.from_user.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n`{error}`",
                             reply_markup=tg_keyboard.admin_keyboard())
            dbcon.set_status(message, 99)

    else:
        bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª –í–∞—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help\n–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",
                         reply_markup=tg_keyboard.main_keyboard())
        dbcon.set_status(message, 20)


# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω—è–ª –í–∞—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help",
                     reply_markup=tg_keyboard.main_keyboard())
    dbcon.set_status(message, 20)


bot.infinity_polling()
